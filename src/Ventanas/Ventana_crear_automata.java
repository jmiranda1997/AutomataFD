/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import AFN.AFN;
import Clases.ManejoArchivo;
import Excepciones.ExcepcionDatosIncorrectos;
import ExpresionRegular.ExpresionRegular;
import Principal.VentanaAutomata;
import java.awt.Dimension;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author pc
 */
public class Ventana_crear_automata extends javax.swing.JDialog {
    private VentanaAutomata nuevoAutomata;
    /**
     * Creates new form Ventana_crear_automata
     */
    public Ventana_crear_automata(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        etiqueta_expresion_regular.setVisible(false);
        automata_expresion_regular.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        etiqueta_cantidad_estados = new javax.swing.JLabel();
        automata_nombre = new javax.swing.JTextField();
        automata_cantidad_simbolos = new javax.swing.JTextField();
        automata_cantidad_estados = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        automata_descripcion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        etiqueta_expresion_regular = new javax.swing.JLabel();
        automata_expresion_regular = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tipo_determinista = new javax.swing.JRadioButton();
        tipo_no_determinista = new javax.swing.JRadioButton();
        desde_expresion_regular = new javax.swing.JRadioButton();
        crear_automata = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear nuevo Autómata Finito");
        setLocationByPlatform(true);

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Nombre del Autómta:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Cantidad de Símbolos:");

        etiqueta_cantidad_estados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiqueta_cantidad_estados.setText("Cantidad de Estados:");

        automata_nombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        automata_cantidad_simbolos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        automata_cantidad_estados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jScrollPane1.setHorizontalScrollBar(null);

        automata_descripcion.setColumns(20);
        automata_descripcion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        automata_descripcion.setLineWrap(true);
        automata_descripcion.setRows(5);
        jScrollPane1.setViewportView(automata_descripcion);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Datos del nuevo Autómata:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Descripción:");

        etiqueta_expresion_regular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        etiqueta_expresion_regular.setText("Expresión Regular:");

        automata_expresion_regular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(automata_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel6)
                                .addComponent(jScrollPane1)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(etiqueta_cantidad_estados)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(automata_cantidad_estados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(automata_cantidad_simbolos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(etiqueta_expresion_regular)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(automata_expresion_regular, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(automata_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(automata_cantidad_simbolos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiqueta_cantidad_estados)
                    .addComponent(automata_cantidad_estados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiqueta_expresion_regular)
                    .addComponent(automata_expresion_regular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(51, 102, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tipo de Autómata Finito:");

        tipo_determinista.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tipo_determinista.setSelected(true);
        tipo_determinista.setText("Determinista");
        tipo_determinista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_deterministaActionPerformed(evt);
            }
        });

        tipo_no_determinista.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tipo_no_determinista.setText("No Determinista");
        tipo_no_determinista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipo_no_deterministaActionPerformed(evt);
            }
        });

        desde_expresion_regular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        desde_expresion_regular.setText("Desde Expresión regular");
        desde_expresion_regular.setEnabled(false);
        desde_expresion_regular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desde_expresion_regularActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tipo_determinista))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tipo_no_determinista)
                        .addGap(18, 18, 18)
                        .addComponent(desde_expresion_regular)))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tipo_determinista)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo_no_determinista)
                    .addComponent(desde_expresion_regular))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        crear_automata.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        crear_automata.setText("Crear");
        crear_automata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_automataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(crear_automata)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crear_automata)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipo_deterministaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_deterministaActionPerformed
        boolean tipoAFD = tipo_determinista.isSelected();
        tipo_no_determinista.setSelected(!tipoAFD);
        desde_expresion_regular.setEnabled(!tipoAFD);
        desde_expresion_regular.setSelected(!tipoAFD);
        etiqueta_cantidad_estados.setVisible(tipoAFD);
        automata_cantidad_estados.setVisible(tipoAFD);
        etiqueta_expresion_regular.setVisible(!tipoAFD);
        automata_expresion_regular.setVisible(!tipoAFD);
    }//GEN-LAST:event_tipo_deterministaActionPerformed

    private void tipo_no_deterministaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipo_no_deterministaActionPerformed
        tipo_determinista.setSelected(!tipo_no_determinista.isSelected());
        desde_expresion_regular.setEnabled(tipo_no_determinista.isSelected());
    }//GEN-LAST:event_tipo_no_deterministaActionPerformed

    private void desde_expresion_regularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desde_expresion_regularActionPerformed
        boolean desdeER = desde_expresion_regular.isSelected();
        etiqueta_cantidad_estados.setVisible(!desdeER);
        automata_cantidad_estados.setVisible(!desdeER);
        etiqueta_expresion_regular.setVisible(desdeER);
        automata_expresion_regular.setVisible(desdeER);
    }//GEN-LAST:event_desde_expresion_regularActionPerformed

    private void crear_automataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_automataActionPerformed
        boolean afd = tipo_determinista.isSelected(), desdeER = desde_expresion_regular.isSelected();
        boolean iniciar = false;
        String nombre = automata_nombre.getText(), expresionRegular = automata_expresion_regular.getText();
        String descripcion = automata_descripcion.getText();
        int cantidadSimbolos = (automata_cantidad_simbolos.getText().length()==0) ? 0 : Integer.parseInt(automata_cantidad_simbolos.getText());
        int cantidadEstados = (automata_cantidad_estados.getText().length()==0) ? 0 : Integer.parseInt(automata_cantidad_estados.getText());
        /* Construcción del Autómata según las especificaciones */
        if (nombre.length() == 0)
            JOptionPane.showMessageDialog(this, "Asigne un nombre al nuevo Autómata", "Error", JOptionPane.ERROR_MESSAGE);
        else if (cantidadSimbolos == 0)
            JOptionPane.showMessageDialog(this, "No se ha especificado la Cantidad de Símbolos\nDicho valor no puede ser cero", nombre, JOptionPane.ERROR_MESSAGE);
        else if (!desdeER && cantidadEstados == 0)
            JOptionPane.showMessageDialog(this, "No se ha especificado la Cantidadde Estados\nDichos valor no puede ser cero", "Error", JOptionPane.ERROR_MESSAGE);
        else
            iniciar = true;
        try {
            if (desdeER)
                ExpresionRegular.validarEstructuraER(expresionRegular);
            if (iniciar) {
                int tipoAutomata = 1;
                if (!afd) tipoAutomata = 2;
                if (desdeER) tipoAutomata = 3;
                nuevoAutomata = new VentanaAutomata(cantidadEstados, cantidadSimbolos, tipoAutomata, expresionRegular);
                this.dispose();
                if (nuevoAutomata.getNuevo() != null) {
                    nuevoAutomata.getNuevo().setNombre(nombre);
                    nuevoAutomata.getNuevo().setDescripcion(descripcion);
                    if (!afd)
                        exportarAFN(expresionRegular, nuevoAutomata.getNuevo().getAlfabeto());
                    this.dispose();
                }
            }
        } catch (ExcepcionDatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_crear_automataActionPerformed
    
    private void exportarAFN(String expresionRegular, String[] alfabeto) {
        String[] opciones = {"Si", "No"};
        int quiereExportar = JOptionPane.showOptionDialog(this,
                "Puede exportar su AFN a un archivo externo.\n\nDesea exportarlo?",
                "Exportar AFN",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]);
        if (quiereExportar == JOptionPane.YES_OPTION) {
            JFileChooser ventana_ruta = new JFileChooser(System.getProperty("user.home"));
            ventana_ruta.setDialogTitle("Seleccione la ruta de Exportación");
            ventana_ruta.setFileFilter(new FileNameExtensionFilter("Automata Finito No Determinista", "afn"));
            
            int seleccion = ventana_ruta.showSaveDialog(this);
            File ruta = ventana_ruta.getSelectedFile();
            if (seleccion == JFileChooser.APPROVE_OPTION) { // Si le da en "Guardar"
                ExpresionRegular validador = new ExpresionRegular(alfabeto);
                try {
                    validador.setExpresionRegular(expresionRegular);
                } catch (ExcepcionDatosIncorrectos ex) { System.out.println(ex.getMessage()+"\nEn Ventana_crear_automata::exportarAFN"); }
                validador.generarGrupos();
                new ManejoArchivo().exportarAFN(ruta, new AFN(validador.getGrupo(), validador.getAlfabeto()));
                JOptionPane.showMessageDialog(this, "El autómata ha sido exportado", "Mensaje", JOptionPane.INFORMATION_MESSAGE, null);
            }
        }
    }
    public VentanaAutomata getAutomata() { return nuevoAutomata; }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_crear_automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_crear_automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_crear_automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_crear_automata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ventana_crear_automata dialog = new Ventana_crear_automata(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField automata_cantidad_estados;
    private javax.swing.JTextField automata_cantidad_simbolos;
    private javax.swing.JTextArea automata_descripcion;
    private javax.swing.JTextField automata_expresion_regular;
    private javax.swing.JTextField automata_nombre;
    private javax.swing.JButton crear_automata;
    private javax.swing.JRadioButton desde_expresion_regular;
    private javax.swing.JLabel etiqueta_cantidad_estados;
    private javax.swing.JLabel etiqueta_expresion_regular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton tipo_determinista;
    private javax.swing.JRadioButton tipo_no_determinista;
    // End of variables declaration//GEN-END:variables
}
